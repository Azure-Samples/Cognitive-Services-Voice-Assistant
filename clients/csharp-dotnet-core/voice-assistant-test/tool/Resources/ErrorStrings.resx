<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACTIVITY_STRING_MALFORMED" xml:space="preserve">
    <value>Activity string is malformed - not a valid activity.</value>
  </data>
  <data name="ACTIVITY_TYPE_NOT_SET" xml:space="preserve">
    <value>Activity does not have "type" field set. Please set the "type" field.</value>
  </data>
  <data name="ALL_PRESENT" xml:space="preserve">
    <value>All 3 inputs - text utterance, activity and WAVFile are present. </value>
  </data>
  <data name="ALL_TESTFILES_SKIPPED" xml:space="preserve">
    <value>All the test files are marked to skip.</value>
  </data>
  <data name="AMBIGUOUS_TURN_INPUT" xml:space="preserve">
    <value>Input turn is ambiguous. Not a valid combination.</value>
  </data>
  <data name="AUTHENTICATION_ERROR" xml:space="preserve">
    <value>Unable to establish bot connection.</value>
  </data>
  <data name="AZURE_REGION_INVALID" xml:space="preserve">
    <value>Azure Region is invalid. Needed to make bot connections.</value>
  </data>
  <data name="AZURE_REGION_MISSING" xml:space="preserve">
    <value>Azure Region is missing. Needed to make bot connections.</value>
  </data>
  <data name="BOT_GREETING_MISSING" xml:space="preserve">
    <value>This turn should not have any input, as it is supposed to check bot greeting.</value>
  </data>
  <data name="CONFIG_FILE_MISSING" xml:space="preserve">
    <value>Configuration file is not specified. Please pass a valid configuration file as an argument.</value>
  </data>
  <data name="CUSTOM_COMMANDS_APP_ID_INVALID" xml:space="preserve">
    <value>Custom Command App Id is invalid.</value>
  </data>
  <data name="CUSTOM_SR_ENDPOINT_ID_INVALID" xml:space="preserve">
    <value>Custom Speech Recognition Endpoint Id is invalid.</value>
  </data>
  <data name="CUSTOM_VOICE_DEPLOYMENT_ID_INVALID" xml:space="preserve">
    <value>Custom Voice Deployment Id is invalid.</value>
  </data>
  <data name="DUPLICATE_DIALOGID" xml:space="preserve">
    <value>Dialog ID's in Test File are not unique.</value>
  </data>
  <data name="FAILED_CREATING_OUPUT_FOLDER" xml:space="preserve">
    <value>Could not create Output Folder.</value>
  </data>
  <data name="FILENAME_PATH_NOT_RELATIVE" xml:space="preserve">
    <value>Test file names may include relative path, not full paths.</value>
  </data>
  <data name="FILE_DOES_NOT_EXIST" xml:space="preserve">
    <value>File with this name and path does not exist.</value>
  </data>
  <data name="FOLDER_NOT_FOUND" xml:space="preserve">
    <value>Folder not found. </value>
  </data>
  <data name="INPUT_FILE_MISSING" xml:space="preserve">
    <value>No Input test files were specified.</value>
  </data>
  <data name="INVALID_TURNID_SEQUENCE" xml:space="preserve">
    <value>TurnID sequence is invalid.</value>
  </data>
  <data name="KEYWORD_RECOGNITION_MODEL_NOT_FOUND" xml:space="preserve">
    <value>Keyword Recognition Model File not found. </value>
  </data>
  <data name="LATENCY_STRING_MALFORMED" xml:space="preserve">
    <value>Expected Latency string is malformed - not a valid expected latency.</value>
  </data>
  <data name="LATENCY_STRING_PRESENT" xml:space="preserve">
    <value>When ExpectedResponses is missing or an empty array ("bootstraping mode"), you should not specify ExpectedUserPerceivedLatency.</value>
  </data>
  <data name="NEGATIVE_SLEEP_DURATION" xml:space="preserve">
    <value>Sleep duration cannot be a negative number.</value>
  </data>
  <data name="NEGATIVE_TURNID" xml:space="preserve">
    <value>Turn ID must be a non-negative integer.</value>
  </data>
  <data name="NONE_PRESENT" xml:space="preserve">
    <value>All input fields are empty.</value>
  </data>
  <data name="NO_WRITE_ACCESS_FOLDER" xml:space="preserve">
    <value>The folder does not have write permissions for the user running the code.</value>
  </data>
  <data name="OR_OCCURRENCE_INCONSISTENT" xml:space="preserve">
    <value>OR operator occurrence is inconsistent among corresponding expected text, speak, and ExpectedTTSAudioDuration.</value>
  </data>
  <data name="SR_LANGUAGE_INVALID" xml:space="preserve">
    <value>Speech Recognition Language is invalid.</value>
  </data>
  <data name="SUBSCRIPTION_KEY_INVALID" xml:space="preserve">
    <value>Subscription Key is invalid (expecting a GUID).</value>
  </data>
  <data name="SUBSCRIPTION_KEY_MISSING" xml:space="preserve">
    <value>Subscription Key is missing. Needed to make bot connections.</value>
  </data>
  <data name="TIMEOUT_INVALID" xml:space="preserve">
    <value>A negative number is not a valid value for Timeout.</value>
  </data>
  <data name="TTS_AUDIO_DURATION_INVALID" xml:space="preserve">
    <value>Size of ExpectedTTSAudioDurations does not match the size of ExpectedResponses.</value>
  </data>
  <data name="TTS_AUDIO_DURATION_MARGIN_INVALID" xml:space="preserve">
    <value>A negative number is not a valid value for TTSAudioDurationMargin.</value>
  </data>
  <data name="TTS_AUDIO_DURATION_PRESENT" xml:space="preserve">
    <value>When ExpectedResponses is missing or an empty array ("bootstraping mode"), you should not specify ExpectedTTSAudioDurations. Otherwise, the size of ExpectedResponses and ExpectedTTSAudioDurations should be same.</value>
  </data>
  <data name="TTS_AUDIO_DURATION_VALUES_INVALID" xml:space="preserve">
    <value>ExpectedTTSAudioDurations is not valid. Zero and negative values other than -1 are not valid.</value>
  </data>
  <data name="UTTERANCE_ACTIVITY_PRESENT" xml:space="preserve">
    <value>Both Utterance and Activity field present. </value>
  </data>
  <data name="WAV_FILE_ACTIVITY_PRESENT" xml:space="preserve">
    <value>Both WAV fIle and Activity field present. </value>
  </data>
</root>