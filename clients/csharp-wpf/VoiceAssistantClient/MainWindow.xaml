<Window x:Class="VoiceAssistantClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VoiceAssistantClient"
        xmlns:json="clr-namespace:JsonViewerControl;assembly=JsonViewControl"
        mc:Ignorable="d"
        Title="{Binding WindowTitle, RelativeSource={RelativeSource Mode=Self}}" Height="650" Width="1000">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="3" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="AliceBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid  Margin="5,0">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="" VerticalAlignment="Center" Name="ConnectionProfileInfoBlock" FontWeight="Bold"/>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="2">
                    <Button Content="Reconnect" HorizontalAlignment="Right" VerticalAlignment="Center" Width="68" Height="35" Margin="5,0" Click="Reconnect_Click"/>
                    <Button Name="Settings"  ToolTip="Application settings"  Click="Settings_Click" Margin="5,0" Height="35" Width="35">
                        <Image Source="resources/Settings.png" Stretch="UniformToFill" Margin="4"/>
                    </Button>
                </StackPanel>
            </Grid>
            <Grid Background="White"  VerticalAlignment="Stretch"   Grid.Row="2" Grid.ColumnSpan="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="3*" />
                    </Grid.RowDefinitions>

                    <GridSplitter Background="White" Grid.RowSpan="3" Grid.Column="1" Width="10" VerticalAlignment="Stretch" HorizontalAlignment="Center" />

                    <GridSplitter Background="White" Grid.Row="1" Height="10"  Grid.Column="2" HorizontalAlignment="Stretch"/>

                    <Grid Grid.RowSpan="3" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid  Grid.Row="0" Background="#20848B">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Conversation View"  Foreground="White" Padding="4"/>
                        </Grid>
                        <local:ConversationView  Grid.Row="1" x:Name="ConversationView"/>
                    </Grid>

                    <Grid  Grid.Row="0" Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid  Grid.Row="0" Background="#20848B">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="Activity Log"  Foreground="White" Padding="4"/>
                            <Button Grid.Column="1" Click="ExportActivityLog_Click" ToolTip="Export all activity payload to file" Margin="2">
                                <TextBlock Text="Export Log" Padding="10,0,10,0"/>
                            </Button>
                        </Grid>
                        <ListView Grid.Row="1" ItemsSource="{Binding Activities}" x:Name="ActivitiesPane" 
                                  SelectionChanged="ActivitiesPane_SelectionChanged"
                                  VerticalAlignment="Stretch" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <TextBlock Text="{Binding Time, StringFormat='HH:mm:ss.fff   '}" Name="actTime"/>
                                        <TextBlock Text="Type: " />
                                        <TextBlock Text="{Binding TypeSummary}" FontWeight="Bold" />
                                    </WrapPanel>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=From}" Value="User">
                                            <Setter Property="Foreground" Value="Blue" TargetName="actTime"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=From}" Value="Bot">
                                            <Setter Property="Foreground" Value="Green" TargetName="actTime"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                    <DockPanel Grid.Row="2" Grid.Column="2">
                        <json:JsonViewer x:Name="ActivityPayloadPane" JsonViewerTitle="Activity Payload"  
                            BorderThickness="1" BorderBrush="{x:Static SystemColors.ControlDarkBrush}"  
                            DockPanel.Dock="Bottom" ScrollViewer.VerticalScrollBarVisibility="Visible"/>
                    </DockPanel>
                </Grid>
            </Grid>

            <Grid Grid.Row="3" Grid.ColumnSpan="2">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" FocusManager.FocusedElement="{Binding ElementName=statusBox}" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Height="25" Padding="4"  VerticalAlignment="Center"
                             HorizontalAlignment="Stretch" x:Name="statusBox" Margin="0,5,5,5" 
                             TextWrapping="NoWrap" AcceptsReturn="False"
                             MaxLines="1"
                             KeyUp="StatusBox_KeyUp">
                    </TextBox>
                    <TextBlock Grid.Column="0" Height="25" Padding="4" IsHitTestVisible="False" 
                               Text="  Press the mic button, or type to start talking to your bot" x:Name="statusOverlay" 
                               VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,5,5,5" Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=statusBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
                        <Button Click="Mic_Click" Height="35" Width="35">
                            <Image Source="resources/microphone.png" Stretch="UniformToFill"/>
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding ListeningState}" Value="Listening"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="LightCoral" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                                                <Condition Binding="{Binding ListeningState}" Value="Listening"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="PaleVioletRed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
            
            <Grid Background="White" VerticalAlignment="Bottom" Grid.Row="4" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Custom Activity:" VerticalAlignment="Center" Padding="0,0,5,0"/>
                <ComboBox  Grid.Column="1"  Text="-- Select Team --" x:Name="CustomActivityCollectionCombo" ToolTip="Custom activities collection. Click 'New' to add one..." Margin="5,5" IsEditable="False" IsReadOnly="True"/>
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <Button Content="New..." x:Name="NewCustomActivityButton" Click="NewCustomActivityButton_Click" Width="45" Margin="2,2"/>
                    <Button Content="Edit..." x:Name="EditCustomActivityButton" Click="EditCustomActivityButton_Click" Width="45"  Margin="2,2"/>
                    <Button Name="SendActivity" Content="Send" Click="SendActivity_Click"  ToolTip="Send custom activity selected in the list" Width="45" Margin="2,2,0,2"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
